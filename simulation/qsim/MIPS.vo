// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 16.0.0 Build 211 04/27/2016 SJ Lite Edition"

// DATE "11/23/2016 21:24:08"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module aludeco (
	funct,
	aluop,
	alucontrol);
input 	[5:0] funct;
input 	[1:0] aluop;
output 	[2:0] alucontrol;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \alucontrol[0]~output_o ;
wire \alucontrol[1]~output_o ;
wire \alucontrol[2]~output_o ;
wire \aluop[1]~input_o ;
wire \funct[0]~input_o ;
wire \funct[1]~input_o ;
wire \funct[2]~input_o ;
wire \funct[3]~input_o ;
wire \WideOr2~0_combout ;
wire \funct[4]~input_o ;
wire \funct[5]~input_o ;
wire \alucontrol~0_combout ;
wire \alucontrol~1_combout ;
wire \aluop[0]~input_o ;
wire \WideOr0~0_combout ;
wire \Selector3~0_combout ;


cyclonev_io_obuf \alucontrol[0]~output (
	.i(\alucontrol~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\alucontrol[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \alucontrol[0]~output .bus_hold = "false";
defparam \alucontrol[0]~output .open_drain_output = "false";
defparam \alucontrol[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \alucontrol[1]~output (
	.i(\alucontrol~1_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\alucontrol[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \alucontrol[1]~output .bus_hold = "false";
defparam \alucontrol[1]~output .open_drain_output = "false";
defparam \alucontrol[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \alucontrol[2]~output (
	.i(\Selector3~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\alucontrol[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \alucontrol[2]~output .bus_hold = "false";
defparam \alucontrol[2]~output .open_drain_output = "false";
defparam \alucontrol[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \aluop[1]~input (
	.i(aluop[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\aluop[1]~input_o ));
// synopsys translate_off
defparam \aluop[1]~input .bus_hold = "false";
defparam \aluop[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \funct[0]~input (
	.i(funct[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\funct[0]~input_o ));
// synopsys translate_off
defparam \funct[0]~input .bus_hold = "false";
defparam \funct[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \funct[1]~input (
	.i(funct[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\funct[1]~input_o ));
// synopsys translate_off
defparam \funct[1]~input .bus_hold = "false";
defparam \funct[1]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \funct[2]~input (
	.i(funct[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\funct[2]~input_o ));
// synopsys translate_off
defparam \funct[2]~input .bus_hold = "false";
defparam \funct[2]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \funct[3]~input (
	.i(funct[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\funct[3]~input_o ));
// synopsys translate_off
defparam \funct[3]~input .bus_hold = "false";
defparam \funct[3]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \WideOr2~0 (
// Equation(s):
// \WideOr2~0_combout  = (!\funct[0]~input_o  & (!\funct[3]~input_o  & ((!\funct[1]~input_o ) # (!\funct[2]~input_o ))))

	.dataa(!\funct[0]~input_o ),
	.datab(!\funct[1]~input_o ),
	.datac(!\funct[2]~input_o ),
	.datad(!\funct[3]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\WideOr2~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \WideOr2~0 .extended_lut = "off";
defparam \WideOr2~0 .lut_mask = 64'hA800A800A800A800;
defparam \WideOr2~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \funct[4]~input (
	.i(funct[4]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\funct[4]~input_o ));
// synopsys translate_off
defparam \funct[4]~input .bus_hold = "false";
defparam \funct[4]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \funct[5]~input (
	.i(funct[5]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\funct[5]~input_o ));
// synopsys translate_off
defparam \funct[5]~input .bus_hold = "false";
defparam \funct[5]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \alucontrol~0 (
// Equation(s):
// \alucontrol~0_combout  = (\aluop[1]~input_o  & ((!\WideOr2~0_combout ) # ((!\funct[5]~input_o ) # (\funct[4]~input_o ))))

	.dataa(!\aluop[1]~input_o ),
	.datab(!\WideOr2~0_combout ),
	.datac(!\funct[4]~input_o ),
	.datad(!\funct[5]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\alucontrol~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \alucontrol~0 .extended_lut = "off";
defparam \alucontrol~0 .lut_mask = 64'h5545554555455545;
defparam \alucontrol~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \alucontrol~1 (
// Equation(s):
// \alucontrol~1_combout  = ( \funct[4]~input_o  & ( \funct[5]~input_o  ) ) # ( !\funct[4]~input_o  & ( \funct[5]~input_o  & ( (!\aluop[1]~input_o ) # (((!\funct[2]~input_o ) # (\funct[3]~input_o )) # (\funct[1]~input_o )) ) ) ) # ( \funct[4]~input_o  & ( 
// !\funct[5]~input_o  ) ) # ( !\funct[4]~input_o  & ( !\funct[5]~input_o  ) )

	.dataa(!\aluop[1]~input_o ),
	.datab(!\funct[1]~input_o ),
	.datac(!\funct[2]~input_o ),
	.datad(!\funct[3]~input_o ),
	.datae(!\funct[4]~input_o ),
	.dataf(!\funct[5]~input_o ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\alucontrol~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \alucontrol~1 .extended_lut = "off";
defparam \alucontrol~1 .lut_mask = 64'hFFFFFFFFFBFFFFFF;
defparam \alucontrol~1 .shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \aluop[0]~input (
	.i(aluop[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\aluop[0]~input_o ));
// synopsys translate_off
defparam \aluop[0]~input .bus_hold = "false";
defparam \aluop[0]~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb \WideOr0~0 (
// Equation(s):
// \WideOr0~0_combout  = (!\funct[1]~input_o  & (!\funct[3]~input_o  & ((!\funct[0]~input_o ) # (\funct[2]~input_o ))))

	.dataa(!\funct[0]~input_o ),
	.datab(!\funct[1]~input_o ),
	.datac(!\funct[2]~input_o ),
	.datad(!\funct[3]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\WideOr0~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \WideOr0~0 .extended_lut = "off";
defparam \WideOr0~0 .lut_mask = 64'h8C008C008C008C00;
defparam \WideOr0~0 .shared_arith = "off";
// synopsys translate_on

cyclonev_lcell_comb \Selector3~0 (
// Equation(s):
// \Selector3~0_combout  = ( \WideOr0~0_combout  & ( (!\aluop[1]~input_o  & (((\aluop[0]~input_o )))) # (\aluop[1]~input_o  & (((!\funct[5]~input_o )) # (\funct[4]~input_o ))) ) ) # ( !\WideOr0~0_combout  & ( (\aluop[0]~input_o ) # (\aluop[1]~input_o ) ) )

	.dataa(!\aluop[1]~input_o ),
	.datab(!\funct[4]~input_o ),
	.datac(!\funct[5]~input_o ),
	.datad(!\aluop[0]~input_o ),
	.datae(!\WideOr0~0_combout ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\Selector3~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \Selector3~0 .extended_lut = "off";
defparam \Selector3~0 .lut_mask = 64'h55FF51FB55FF51FB;
defparam \Selector3~0 .shared_arith = "off";
// synopsys translate_on

assign alucontrol[0] = \alucontrol[0]~output_o ;

assign alucontrol[1] = \alucontrol[1]~output_o ;

assign alucontrol[2] = \alucontrol[2]~output_o ;

endmodule
